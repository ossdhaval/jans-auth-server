name: build with coverage

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - master
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      JVM_PROJECTS: JanssenProject/jans-auth-server|JanssenProject/jans-orm|JanssenProject/jans-config-api|JanssenProject/jans-client-api|JanssenProject/jans-scim|JanssenProject/jans-core|JanssenProject/jans-notify|JanssenProject/jans-fido2|JanssenProject/jans-eleven
      NON_JVM_PROJECTS: ossdhaval/jans-auth-server|JanssenProject/jans-setup|JanssenProject/jans-cli|JanssenProject/docker-jans-persistence-loader|JanssenProject/docker-jans-client-api|JanssenProject/jans-pycloudlib|JanssenProject/docker-jans-auth-server|JanssenProject/docker-jans-fido2|JanssenProject/docker-jans-scim|JanssenProject/docker-jans-config-api|JanssenProject/docker-jans-certmanager|JanssenProject/docker-jans-configuration-manager|JanssenProject/jans-cloud-native
    
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of sonarqube analysis
          
      - name: get env variables
        run: env
          
      - name: compare the repo
        run: |
          echo "started .... "
          case "$GITHUB_REPOSITORY" in
            "osshaval/jans-auth-server") echo "will run mvn .... "
            ;;
            "ossdhval/jans-auth-server") echo "don't run mvn"
            ;;
            *) echo "something else"
            ;;
          esac
          
          
      - name: Set up JDK 11
        #if: contains(env.JVM_PROJECTS, github.repository)
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          
          # put here
          
        # Runs a set of commands using the runners shell

      - name: Cache SonarCloud packages
        #if: contains(env.JVM_PROJECTS, github.repository)
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache Maven packages
        #if: contains(env.JVM_PROJECTS, github.repository)
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Build and analyze
        #if: contains(env.JVM_PROJECTS, github.repository)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          case "$GITHUB_REPOSITORY" in
            "ossdhaval/jans-auth-server") 
              echo "Run Sonar analysis for jans-auth-server "
              mvn -B -pl verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
            ;;
            "JanssenProject/jans-client-api") 
              echo "Run Sonar analysis for jans-client-api"
              mvn -B -pl \!server verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
            ;;
            "JanssenProject/jans-scim") 
              echo "Run Sonar analysis for jans-scim"
              mvn -B -pl \!client verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
            ;;
            *) 
            echo "Run maven build for Java repository"
            mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
            ;;
          esac
      


